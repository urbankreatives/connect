jQuery(document).ready(function(e) {
    "use strict";
    window.woo_multi_currency = {
        init: function() {
            this.design(), this.checkPosition(), this.cacheCompatible(), this.ajaxComplete()
        },
        design: function() {
            jQuery(window).width() <= 768 ? jQuery(".woo-multi-currency.wmc-sidebar").on("click", function() {
                jQuery(this).toggleClass("wmc-hover"), jQuery(this).hasClass("wmc-hover") ? jQuery("html").css({
                    overflow: "hidden"
                }) : jQuery("html").css({
                    overflow: "visible"
                })
            }) : (jQuery(".woo-multi-currency.wmc-sidebar").on("mouseenter", function() {
                jQuery(this).addClass("wmc-hover")
            }), jQuery(".woo-multi-currency.wmc-sidebar").on("mouseleave", function() {
                jQuery(this).removeClass("wmc-hover")
            }))
        },
        checkPosition: function() {
            jQuery(".woo-multi-currency .wmc-currency-wrapper").on("mouseenter", function() {
                this.getBoundingClientRect().top / e(window).height() > .5 ? e(".woo-multi-currency .wmc-sub-currency").addClass("wmc-show-up") : e(".woo-multi-currency .wmc-sub-currency").removeClass("wmc-show-up")
            })
        },
        cacheCompatible() {
            if ("1" === wooMultiCurrencyParams.enableCacheCompatible) {
                if ("undefined" != typeof wc_checkout_params && 1 === parseInt(wc_checkout_params.is_checkout)) return;
                let c = [],
                    r = e(".wmc-cache-pid");
                r.length && r.each(function(r, t) {
                    let a = e(t).data("wmc_product_id");
                    a && c.push(a)
                });
                let t = e(".variations_form");
                t.length && t.each(function(r, t) {
                    let a = e(t).data("product_variations");
                    a.length && a.forEach(e => {
                        c.push(e.variation_id)
                    })
                });
                let a = e(".woocommerce-multi-currency.wmc-shortcode").not(".wmc-list-currency-rates"),
                    i = [];
                a.map(function() {
                    let c = e(this);
                    i.push({
                        layout: c.data("layout"),
                        flag_size: c.data("flag_size")
                    })
                }), c.length && (c = [...new Set(c)]);
                let o = [];
                e(".wmc-cache-value").each(function(c, r) {
                    o.push({
                        price: e(r).data("price"),
                        original_price: e(r).data("original_price"),
                        currency: e(r).data("currency"),
                        product_id: e(r).data("product_id"),
                        keep_format: e(r).data("keep_format")
                    })
                }), o = [...new Set(o.map(JSON.stringify))].map(JSON.parse), e.ajax({
                    url: wooMultiCurrencyParams.ajaxUrl,
                    type: "POST",
                    data: {
                        action: "wmc_get_products_price",
                        pids: c,
                        shortcodes: i,
                        wmc_current_url: e(".wmc-current-url").val(),
                        exchange: o
                    },
                    success(c) {
                        if (c.success) {
                            let r = c.data.prices || "",
                                t = c.data.current_currency || "",
                                o = c.data.exchange || "";
                            if (i.length > 0 && i.length === c.data.shortcodes.length)
                                for (let e = 0; e < i.length; e++) a.eq(e).replaceWith(c.data.shortcodes[e]);
                            if ("1" !== wooMultiCurrencyParams.switchByJS && e(".wmc-currency a").unbind(), t && (e(".wmc-sidebar .wmc-currency").removeClass("wmc-active"), e(`.wmc-sidebar .wmc-currency[data-currency=${t}]`).addClass("wmc-active"), e(".wmc-price-switcher .wmc-current-currency i").removeClass().addClass("vi-flag-64 flag-" + c.data.current_country), e(".wmc-price-switcher .wmc-sub-currency-current").removeClass("wmc-sub-currency-current"), e(`.wmc-price-switcher .wmc-currency[data-currency=${t}]`).addClass("wmc-sub-currency-current"), e(`select.wmc-nav option[data-currency=${t}]`).prop("selected", !0)), "undefined" != typeof woo_multi_currency_switcher && woo_multi_currency_switcher.init(), r) {
                                for (let c in r) e(`.wmc-cache-pid[data-wmc_product_id=${c}]`).replaceWith(r[c]);
                                e(".variations_form").each((c, t) => {
                                    let a = e(t).data("product_variations");
                                    a.map(e => {
                                        let c = e.variation_id;
                                        return e.price_html = r[c], e
                                    }), e(t).data("product_variations", a)
                                })
                            }
                            if (o)
                                for (let c in o) e(`.wmc-cache-value[data-price="${o[c].price}"][data-product_id="${o[c].product_id}"][data-keep_format="${o[c].keep_format}"][data-original_price="${o[c].original_price}"][data-currency="${o[c].currency}"]`).replaceWith(o[c].shortcode)
                        }
                    }
                })
            }
        },
        ajaxComplete() {
            e(document).on("append.infiniteScroll", () => {
                this.cacheCompatible()
            })
        }
    }, woo_multi_currency.init()
});